复习数据库

19：12 gorm 演示
主键
golang struct 与 数据表

orm 基本操作

1. 连接数据库
conn, err := gorm.Open(mysql.Open("root:root@tcp(127.0.0.1:3306)/testdb"))

2. 
Select
注意：
1. where 根据对象查询时，只能做 A= b 式的查询
2. 复杂where条件需要SQL
3. SQL会与数据库字段重新绑定关联关系


INSERT等不再包含任何select语句，而是通过Golang struct 添加记录。 

Updata
updata更新数据，分为两种模式：
1. 全覆盖模式：保存更改后的对象的所有的字段
 从数据库获取已有的数据
 修改最近的身体变化数据
 全量保存

2. 部分更新魔兽：仅更新某个或某几个字段
resp := conn.Model(p).Select("name", "tall").Updates(p) // 表示 把p结构体中的，name和tall，更新回p


更新数据时，golang struct 中必须带有”主键“ （primary key）

Delete
删除数据时，必须通过”主键“（primary key）进行删除。
批量删除操作可以通过特殊语法完成。

注意：
主键如果是动态的，则需要从数据库拿到结果，然后删除对象。


20：30 扩展学习
1. 推荐书籍：《数据库系统概论》
2. SQL查询语法与高级查询（如：嵌套查询、关联查询、临时表等）
3. 数据库查询优化（索引、分库分表、分区等）
4. 分布式数据库（主从复制、主主复制、最终一致性复制等）
mysql group relication 分布式的一致性
postgresxl 完整的分布式数据库

推荐了3本（一系列）



20：37 一、网络基础

20：45为什么需要网络
现代不能没有网络


推荐了一本书《计算机网络》最新第八版

20：50 二、网络模型
应用层
表现层
会话层
传输层
网络层
数据链路层
物理层

kubernetes 

20：58 三、IP 和 端口
 IP :全称：网络互连协议，internet protocal， 是连接在网络上的每个设备的地址。


21：05 端口(port)
端口是每个网络设备上能够暴露的通信接口。可用范围：0-65535 。

思考：
1. 知道网络模型，知道ip，知道端口，他们是怎么通信的呢？
2. 我怎么自己搭建一个服务器？
3. 我怎么访问我的服务器？


21:09 网络交互

1. 服务端 
1.1 服务端为服务提供方
1.2. 需要能够被访问
https 协议，端口是443 加密
http 协议，端口80 不加密
-->
网址怎么对应到ip地址的？
通过DNS解析： baidu.com --> IP: 180.

1.3. 服务器需要有IP
1.4. 服务器可以被访问
1.5. 服务器需要监听在特定端口
1.6 可以处理到达的请求




21：22 客户端
1. 客户端为请求发起方
2. 客户端需要特定的服务
3. 客户端知道如何处理服务方的反馈
-->
4. 客户端有IP
5. 客户端可以联通服务器
6. 客户端可以处理服务器返回内容


21：24 服务模式
服务模式是指服务提供方提供的服务方式，通常分为：CS模式、BS模式。

cs模式 ：只能通过特定或专用客户端与服务端进行通信。

bs模式： 通过浏览器即可与服务端进行通信。 https 支持的

浏览器发送请求，经历了什么？
1. 浏览器地址
2. DNS解析
3. 从DNS 服务器拿到IP地址
4. 开始第一次请求，获取证书
5. IP地址被封装
	a. 封装带有 keep-alive的标志
	b. 。。。
6. TCP包装（添加TCP包头）
	a. TCP建立连接四次握手
7. 帧包装
8. 调制发送（猫）
9. 经过各种路由器转发
10. 到达百度服务器地址+端口
11. 百度服务器返回证书
12. 服务器返回内容
13. 拿到证书
14. 开始验证证书
	a。 查看证书签名
	b。 找到中间商
	c。 追溯到根证书
	d。查看根证书是否授信
	e。 授信，继续第二次请求
15. 开始第二次请求（正式的内容） 百度服务器提取你的关键字，开始搜索。。。
16. 经过。。。。（反向经过）
17. 浏览器解析

通过Wireshark 查看，网络通信过程。

21：40 AI 对话案例
